[tox]
envlist =
  mkdir_reports
  develop

[gh-actions]
python =
    3.10: py310, mypy

[mkdir_reports]
basepython = python3.10
description = Create reports directory.
commands = mkdir -p reports

[testenv]
basepython = python3.10
usedevelop = true
description = Global settings for testenv.
setenv =
  SRC_TARGETS = {toxinidir}/kodilla/module_2_quiz_app_selenium/quiz_app
  UT_TARGETS = {toxinidir}/kodilla/module_2_quiz_app_selenium/quiz_app/home/tests/
  LINT_TARGETS = {env:SRC_TARGETS} {env:UT_TARGETS}

[testenv:selenium_tests]
description = Run unit tests.
deps =
  pyvirtualdisplay
  webdriver-manager==3.5.4
  selenium==4.1.3
  pytest==7.1.1
commands =
  sudo apt-get install xvfb xserver-xephyr
  pytest -vv {posargs:{env:UT_TARGETS}}

[testenv:isort_check]
description = Run isort check.
deps =
  isort==5.10.1
commands =
  isort --check-only --diff --multi-line 3 --line-length 120 --profile black {posargs:{env:LINT_TARGETS}}

[testenv:black_check]
description = Run black checker.
deps =
  black==22.3.0
commands =
  black --check --line-length 120 --diff {posargs:{env:LINT_TARGETS}}

[testenv:flake8]
description = Run flake8.
deps =
  flake8==3.8.4
  flake8-colors==0.1.9
  flake8-docstrings==1.5.0
  flake8-import-order==0.18.1
  mccabe==0.6.1
  pydocstyle==5.1.1
  pyflakes==2.2.0
commands = flake8 {posargs:{env:LINT_TARGETS}}

[testenv:pylint]
description = Run pylint.
deps =
  pylint==2.7.0
# Here you can set the rating level for the pylint (Currently, level is set as 9.0 as fail_under parameter).
commands = pylint --fail-under 9.0 {posargs:{env:LINT_TARGETS}}

[testenv:mypy]
description = Run mypy.
deps =
  mypy==0.790
commands =
  mypy {posargs:{env:LINT_TARGETS}}


#### developers tools
[testenv:interactive]
description = Run interactive bash console for custom tests.
allowlist_externals = bash
commands = bash

[testenv:isort]
# For more options visit: https://pycqa.github.io/isort/docs/configuration/options.html#from-first
description = Sort imports alphabetically, and automatically separated into sections and by type.
deps =
  isort==5.10.1
commands = isort {env:LINT_TARGETS} --multi-line 3 --line-length 120 --profile black

[testenv:black_reformat]
description = Auto-format source code.
skip_install = true
deps =
  black==22.3.0
commands = black --line-length 120 {env:LINT_TARGETS}

#### tool configuration
[flake8]
exclude =
  .tox,
  .git,
  __pycache__,
  doc/conf.py,
  build,
  dist,
  *.pyc,
  *.egg-info,
  .cache,
  .eggs
ignore =
  # E501 - Line too long (82 > 79 characters)
  E501,
  # D107 - Missing docstring in __init__
  D107,
  # Line break occurred before a binary operator (https://www.flake8rules.com/rules/W503.html)
  W503,
  # Whitespace before ':'
  E203,
max-complexity = 11
select = B,C,E,F,W,T4,B9
import-order-style = google
application-import-names = swatcore
format = ${cyan}%(path)s${reset}:${yellow_bold}%(row)d${reset}:${green_bold}%(col)d${reset}: ${red_bold}%(code)s${reset} %(text)s

[coverage:report]
exclude_lines =
  @abstractmethod
  pragma: no cover